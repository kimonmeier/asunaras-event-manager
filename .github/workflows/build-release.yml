name: Build and Push Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the Docker image (e.g., v1.0.0)'
        required: true
        type: string
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read      # to checkout the code
  packages: write     # to push Docker images to GitHub Packages (ghcr.io)

  
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.10'

    - name: Restore Dotnet Tool
      run: dotnet tool restore

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish application
      run: dotnet publish -c Release -o ./publish --no-build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.PUSH_TOKEN }}
        
    - name: Set Docker tag
      id: get-tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "release" ]; then
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "tag=unstable" >> $GITHUB_OUTPUT
        fi
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Asunara-Event-Manager/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tag.outputs.tag }}